#
# ckan - Pylons configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = true
email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5000

[app:main]
use = egg:ckan
full_stack = true
cache_dir = %(here)s/data
beaker.session.key = ckan
beaker.session.secret = ${app_instance_secret}
app_instance_uuid = ${app_instance_uuid}

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
set debug = false

# Specify the database for SQLAlchemy to use via
#sqlalchemy.url = sqlite:///%(here)s/somedb.db
sqlalchemy.url = postgres://ckantest:pass@localhost/ckantest

# repoze.who config
who.config_file = %(here)s/who.ini
who.log_level = warning
who.log_file = %(cache_dir)s/who_log.ini

# CKAN auth configuration (TODO: rename to ckan.auth or similar ...)
# space separated list ...
auth.admins = 

# CKAN search cache
# any non-empty value enables it
enable_caching =

# Location of RDF versions of packages
# e.g. rdf_packages = http://semantic.ckan.net/data/
rdf_packages =

# Location of licenses group (defaults to local Python licenses package)
#licenses_group_url = http://licenses.opendefinition.org/2.0/ckan_original

# Package form to use
package_form = standard

# Changeset configuration
#changeset.auto_commit = true
#changeset.sources = http://www.ckan.net/,

# Guide location
#guide_url = http://wiki.okfn.org/ckan/doc/

## extra places to look for templates (comma separated list)
## any templates found will override correspondingly named templates in in
## ckan/templates/ (e.g. to override main layout template provide a new one
## called layout.html)
# extra_template_paths = %(here)s/my-extra-templates

# Messaging module used by carrot:
# * pyamqplib - AMQP (e.g. for RabbitMQ)
# * queue - native Python Queue
carrot_messaging_library = queue

# Logging configuration
[loggers]
keys = root

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
